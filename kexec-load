#!/bin/bash

set -e

PATH="/usr/sbin:/usr/bin"

[ -x /usr/sbin/grubby ]
[ -x /usr/sbin/kexec ]

[ -x /usr/bin/ln ]
[ -x /usr/bin/mktemp ]
[ -x /usr/bin/rm ]
[ -x /usr/bin/systemd-cat ]

GRUBBY_FILE="/var/log/grubby"
TMP="$(mktemp)"

cleanup() {
    rm -f "$GRUBBY_FILE" "$TMP"
}
trap cleanup EXIT

#  Command "grubby --default-kernel" has a bug/feature that fsyncs
#  after writting each line to a debug log file, making it slow (several seconds).
#  Workaround is to write to /dev/null instead.
pushd "${GRUBBY_FILE%/*}" > /dev/null
ln -sf /dev/null "${GRUBBY_FILE##*/}"
popd > /dev/null

KERNEL_IMG="$(grubby --default-kernel)"
[ "${KERNEL_IMG#/boot/vmlinuz-}" != "$KERNEL_IMG" ] && [ -f "$KERNEL_IMG" ]

INDEX="$(grubby --default-index)"
[ "$((INDEX+0))" = "$INDEX" ]

#  Get the detailed information of the default kernel (as seen by grub)
#  This will create a temporary file in /tmp
at_index=0
while read -r a || [[ -n "$a" ]]; do
    case "$a" in
        index="$INDEX") at_index=1 ;;
        index=*) at_index=0 ;;
        args=*|initrd=*|kernel=*|root*)
            [ $at_index -gt 0 ] || continue
            at_index=$((at_index+1))
            echo "$a"
            ;;
    esac
done > "$TMP" < <(grubby --info="$KERNEL_IMG")
[ $at_index -eq 5 ]
source "$TMP"

#  Load (prepare) the kernel for execution
systemd-cat --identifier=kexec-load kexec --debug --load "$kernel" --initrd="$initrd" --command-line="root=$root $args"
